#
# MIT License
#
# (C) Copyright 2021-2022 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
# Please refer to https://github.com/Cray-HPE/base-charts/blob/master/kubernetes/cray-service/values.yaml
# for more info on values you can set/override
# Note that cray-service.containers[*].image and cray-service.initContainers[*].image map values are one of the only structures that
# differ from the standard kubernetes container spec:
# image:
#   repository: ""
#   tag: "" (default = "latest")
#   pullPolicy: "" (default = "IfNotPresent")

externalHostname: ara.local
uriPrefix: /ara
global:
  authGateway: services/services-gateway

cray-service:
  storageClass: ceph-cephfs-external
  type: Deployment
  strategy:
    type: Recreate
    rollingUpdate: null
  nameOverride: cfs-ara
  containers:
    ara:
      name: ara
      image:
        repository: artifactory.algol60.net/csm-docker/stable/docker.io/recordsansible/ara-api
        tag: 0.0.0-ara
      ports:
      - name: http
        containerPort: 8000
        protocol: TCP
      livenessProbe:
        httpGet:
          port: 8000
          path: /api/v1
        initialDelaySeconds: 60
        periodSeconds: 20
      readinessProbe:
        httpGet:
          port: 8000
          path: /api/v1
        initialDelaySeconds: 60
        periodSeconds: 20
      # securityContext:
      #   runAsNonRoot: false
      #   runAsUser: 1000
  #     volumeMounts:
  #     - name: cfs-ara-data-vol
  #       mountPath: /opt/ara
  #     - name: ara-files-vol
  #       mountPath: /mnt/gitea-files
  # volumes:
  #   ara-data-vol:
  #     name: cfs-ara-data-vol
  #     persistentVolumeClaim:
  #       claimName: cfs-ara-data-claim
  #   ara-files-vol:
  #     name: ara-files-vol
  #     configMap:
  #       name: ara-gitea-files
  #       defaultMode: 0755
  # persistentVolumeClaims:
  #   data-claim:
  #     name: cfs-ara-data-claim
  #     accessModes:
  #       - ReadWriteMany
  #     resources:
  #       requests:
  #         storage: 50Gi
  sqlCluster:
    enabled: true
    instanceCount: 3
    postgresVersion: "11"
    volumeSize: 50Gi
    users:
      service_account: []
    databases:
      service_db: service_account
    # backup:
    #   enabled: true
    #   schedule: "10 1 * * *"  # Once per day at 1:10AM
    tls:
      enabled: true
  ingress:
    enabled: false
    # turning off base chart for ingress
